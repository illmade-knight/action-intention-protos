# This workflow automates the versioning and release process for the npm package
# using semantic-release. It also creates a versioned Git tag.

name: Release and Publish npm Package

on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout main repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_PAT }}
          fetch-depth: 0

      - name: Setup Buf, Go, and Node.js
        uses: bufbuild/buf-setup-action@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/setup-go@v4
        with:
          go-version: '1.24'
          cache: false
      - uses: actions/setup-node@v4
        with:
          node-version: '22'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies and plugins
        run: |
          go install google.golang.org/protobuf/cmd/protoc-gen-go@latest
          npm install --prefix ./npm

      - name: Generate and Prepare Package
        run: |
          export PATH="$PATH:$(go env GOPATH)/bin:$(pwd)/npm/node_modules/.bin"
          echo "--- Starting package preparation (Merged Hierarchy) ---"
          
          # 1. CLEANUP: Ensure a clean slate.
          echo "Cleaning up old generated directories..."
          rm -rf gen/ts gen/go
          
          # 2. GENERATE: Outputs hierarchical .ts files to gen/ts/
          # E.g., gen/ts/action_intention/envelope/v1/secure-envelope_pb.ts
          buf generate 
          
          # 3. COPY HELPER FILES: Copy the mirrored source files directly into the generated hierarchy.
          # (Assumes src/ts/action_intention/envelope/v1/envelope.ts exists)
          echo "Merging mirrored TypeScript files into gen/ts/ hierarchy..."
          if [ -d "src/ts" ]; then
            # The -r flag merges the src/ts hierarchy into the gen/ts hierarchy.
            cp -r src/ts/* gen/ts/proto
          fi
          
          # 4. Create index file (Requires update to create-ts-index.js to scan the merged hierarchy)
          echo "Creating the main index.ts barrel file..."
          node ./scripts/create-ts-index.js 
          
          # ðŸš¨ DEBUG STEP: Print the contents of the generated index.ts ðŸš¨
          echo "--- START: index.ts Content Debug ---"
          cat gen/ts/index.ts
          echo "--- END: index.ts Content Debug ---"
          
           # ðŸš¨ DEBUG STEP: Print the contents of the generated folder ðŸš¨
          echo "--- START: Directory Structure Debug ---"
          # Find all files and print their full paths
          find gen/ts -type f 
          echo "--- END: Directory Structure Debug ---"
          
          cp npm/package.json gen/ts/
          cp npm/README.md gen/ts/
          
          echo "--- âœ… Package preparation complete ---"

      - name: Verify Package Structure
        working-directory: ./npm
        # Remove the explicit file path and rely only on the vitest.config.ts include pattern.
        run: ./node_modules/.bin/vitest run --reporter verbose


      - name: Publish to npm and create Git tag
        run: npx semantic-release
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}

