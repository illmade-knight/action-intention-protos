// THE FIX: Updated to use ES Module syntax (import/export).
import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';

// This is the modern replacement for '__dirname' in ES Modules.
const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

const indexDir = path.join(__dirname, '..', 'gen', 'ts');
const tsGenDir = path.join(__dirname, '..', 'gen', 'ts', 'proto');
const indexPath = path.join(indexDir, 'index.ts');

console.log('Creating TypeScript barrel file (index.ts)...');

function findFiles(dir) {
    let results = [];
    const list = fs.readdirSync(dir);
    list.forEach(file => {
        const filePath = path.join(dir, file);
        const stat = fs.statSync(filePath);
        if (stat && stat.isDirectory()) {
            results = results.concat(findFiles(filePath));
        } else if (file.endsWith('.ts')) {
            results.push(filePath);
        }
    });
    return results;
}

const protoFiles = findFiles(tsGenDir);

const exports = protoFiles.map(filePath => {
    const relativePath = path.relative(tsGenDir, filePath);
    const modulePath = relativePath.replace(/\\/g, '/').replace('.ts', '.js');
    return `export * from './proto/${modulePath}';`;
});

const content = `// This file is auto-generated by the create-ts-index.js script. Do not edit.\n\n` +
    exports.join('\n') + '\n';

fs.writeFileSync(indexPath, content);
console.log(`Successfully created index.ts with ${exports.length} exports.`);
